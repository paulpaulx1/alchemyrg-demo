// generate-config.js
const fs = require('fs');
const path = require('path');

// Configuration
const imagesFolder = 'images';
const outputFile = 'image-config.js';

// Get all files from images directory
const files = fs.readdirSync(imagesFolder);

// Find all high-res images (assuming they end with -highres.jpg/png/etc.)
const highResImages = files.filter(file => file.includes('-highres'));

// Generate image data array
const imageData = [];

highResImages.forEach(highResFile => {
  // Get base name (without -highres suffix)
  const baseName = highResFile.replace('-highres', '');
  const fileNameWithoutExt = path.basename(baseName, path.extname(baseName));
  
  // Expected low-res file name
  const lowResFile = `${fileNameWithoutExt}-lowres${path.extname(baseName)}`;
  
  // Check if low-res file exists
  if (files.includes(lowResFile)) {
    // Extract title from filename (replace dashes/underscores with spaces, capitalize words)
    const title = fileNameWithoutExt
      .replace(/[-_]/g, ' ')
      .replace(/\b\w/g, char => char.toUpperCase());
    
    // Add to image data - no explicit ID needed
    imageData.push({
      title,
      lowRes: `images/${lowResFile}`,
      highRes: `images/${highResFile}`
    });
  } else {
    console.warn(`Warning: No matching low-res file found for ${highResFile}`);
  }
});

// Generate JavaScript file with image data
const jsContent = `// Generated by generate-config.js
const imageData = ${JSON.stringify(imageData, null, 2)};

// Export for module usage
if (typeof module !== 'undefined') {
  module.exports = imageData;
}`;

// Write to file
fs.writeFileSync(outputFile, jsContent);

console.log(`Generated config with ${imageData.length} images to ${outputFile}`);
console.log('To use this in your HTML, add:');
console.log('<script src="image-config.js"></script>');
console.log('And modify your script.js to use the imageData variable');